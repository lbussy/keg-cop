; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[PlatformIO]
description = Keg Cop is firmware to enable an ESP32 to track keg capacity and pours
default_envs = lolin_d32

[common]
framework = arduino
platform = espressif32
upload_speed = 921600
monitor_speed = 115200
build_flags =
    !python tools/git_rev.py
    -D BAUD=${common.monitor_speed}
    -D CONFIG_ASYNC_TCP_RUNNING_CORE=1
    -D CONFIG_ASYNC_TCP_USE_WDT=1
    ; -DDEBUG_ESP_PORT=Serial
    ; -DDEBUG_ESP_WIFI
    ; -DDEBUG_ESP_CORE
    ; -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY			 		; v2 Lower Memory (default)
    ; -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH			; v2 Higher Bandwidth
    ; -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH		; v2 Lower Memory (no features)
    ; -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH	; v2 Higher Bandwidth (no features)
    ; -DPIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_LOW_MEMORY 			; v2 IPv6 Lower Memory
    ; -DPIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_HIGHER_BANDWIDTH 		; v2 IPv6 Higher Bandwidth
    ; -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH 			; v1.4 Higher Bandwidth
extra_scripts =
    pre:tools/env_defines.py
lib_deps =
    https://github.com/lbussy/OneWire.git
    https://github.com/lbussy/DS18B20_RT.git
    https://github.com/lbussy/Arduino-Log.git
    https://github.com/lbussy/AsyncWiFiManager.git
    https://github.com/me-no-dev/AsyncTCP.git
    https://github.com/me-no-dev/ESPAsyncWebServer.git
    https://github.com/lbussy/asyncHTTPrequest.git
    https://github.com/lbussy/CircularBuffer.git
    https://github.com/lbussy/LCBUrl.git
    https://github.com/bblanchon/ArduinoJson.git
    https://github.com/lbussy/esptelnet.git
    khoih-prog/ESP_DoubleResetDetector
    marvinroger/AsyncMqttClient @ ^0.8.2
monitor_filters =
    esp32_exception_decoder
    ; send_on_enter
    ; log2file
build_type = debug ; release

[env:lolin_d32]
board = lolin_d32
platform = ${common.platform}
framework = ${common.framework}
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
monitor_filters = ${common.monitor_filters}
extra_scripts = ${common.extra_scripts}
build_flags = ${common.build_flags}
lib_deps = ${common.lib_deps}
build_type = ${common.build_type}
board_build.partitions = 4mb_inc_ota.csv